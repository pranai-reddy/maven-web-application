//Slack Notofications
def sendSlackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node {
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    
    echo " Job Name is : ${env.JOB_NAME}"
    echo " Node Name is : ${env.NODE_NAME}"

try {

sendSlackNotification('STARTED') //Call the function
    
    stage('checkOutCode'){
        git 'https://github.com/pranai-reddy/maven-web-application.git'
    }
    
    def mavenHome = tool  name : "maven 3.8.4"
    
    stage('Build'){
        sh "${mavenHome}/bin/mvn clean package"
    }
    
    stage('ExecuteSonarQubeReport'){
        sh "${mavenHome}/bin/mvn sonar:sonar"
    }
    
    stage('UploadArtifactintoNexus'){
        sh "${mavenHome}/bin/mvn deploy"
    }
    
    stage('DeployApplicationintoTomcatServer'){
        
        sshagent(['8688a0c0-4127-48b4-b5ed-4e25c2946a8a']) {
            sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.108.54.195:/opt/apache-tomcat-9.0.75/webapps"
            
            
        }
        
    }
}
catch(e) {
//If there is an exception then throw us failed status
currentBuild.result="FAILED" // Here currentBuil is the Environment Variable
}
finally {
//Sends us the notification either Success or Failure
sendSlackNotification(currentBuild.result)
}
}
